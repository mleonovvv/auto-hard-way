---
# tasks file for kubernetes-worker#!/bin/bash

#- name: Add an Apt signing key to a specific keyring file
#  apt_key:
#    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
#    keyring: /etc/apt/trusted.gpg.d/kuber.gpg
#
#- name: add repository kubernetes.io
#  apt_repository:
#    repo: deb http://apt.kubernetes.io/ kubernetes-xenial main
#    state: present

- name: install socat
  apt:
    name: "{{ packages }}"
    update_cache: yes
  vars:
    packages:
      - socat
      - conntrack
      - ipset

- name: create directories
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  loop:
    - /etc/cni/net.d
    - /opt/cni/bin
    - /var/run/kubernetes
    - /etc/containerd/
    - "{{ kubernetes_conf_dir }}"
    - "{{ kubeproxy_conf_dir }}"
    - "{{ kubelet_conf_dir }}"

- name: Download bin kubelet/kubectl
  get_url:
    url: "https://storage.googleapis.com/kubernetes-release/release/{{ kube_version }}/bin/linux/amd64/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    mode: u+x
  loop:
    - kubelet
    - kubectl
    - kube-proxy

- name: Download bin runsc latest
  get_url:
    url: https://storage.googleapis.com/gvisor/releases/nightly/latest/runsc
    dest: /usr/local/bin
    mode: a+x
    checksum: 'sha512:https://storage.googleapis.com/gvisor/releases/nightly/latest/runsc.sha512'

- name: Download bin runsc latest
  get_url:
    url: https://github.com/opencontainers/runc/releases/download/v1.0.0-rc6/runc.amd64
    dest: /usr/sbin/runc
    mode: a+x

- name: Download archs
  get_url:
    url: "{{ item.url }}"
    dest: "{{ item.dest }}"
  loop:
    - { url: "{{ cni_plugins_url }}", dest: "/tmp/cni-plugins.tgz" }
    - { url: "{{ containerd_url }}", dest: "/tmp/containerd.tgz" }
    - { url: "{{ crictl_url }}", dest: "/tmp/crictl.tgz" }

- name: Extract archs
  unarchive:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    remote_src: yes
  loop:
    - { dest: "/opt/cni/bin/", src: "/tmp/cni-plugins.tgz" }
    - { dest: "/usr", src: "/tmp/containerd.tgz" }
    - { dest: "/usr/local/bin/", src: "/tmp/crictl.tgz" }

- name: Copy templates
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  loop:
    - { src: "config.toml.j2", dest: "/etc/containerd/config.toml" }
    - { src: "containerd.service.j2", dest: "/etc/systemd/system/containerd.service" }
    - { src: "10-bridge.conf.j2", dest: "/etc/cni/net.d/10-bridge.conf" }
    - { src: "99-loopback.conf.j2", dest: "/etc/cni/net.d/99-loopback.conf" }
    - { src: "kubelet-config.yaml.j2", dest: "{{ kubelet_conf_dir }}/kubelet-config.yaml" }
    - { src: "kubelet.service.j2", dest: "/etc/systemd/system/kubelet.service" }
    - { src: "kube-proxy-config.yaml.j2", dest: "{{ kubeproxy_conf_dir }}/kube-proxy-config.yaml" }
    - { src: "kube-proxy.service.j2", dest: "/etc/systemd/system/kube-proxy.service" }

- name: Start services
  systemd:
    name: "{{ item }}"
    enabled: yes
    state: started
  loop:
    - containerd
    - kubelet
    - kube-proxy
